<Project>
    <PropertyGroup>
		<EnableNETAnalyzers>true</EnableNETAnalyzers> <!-- Enable code analysis for non NET5.0-->
		<AnalysisMode>All</AnalysisMode>
		<AnalysisLevel>latest</AnalysisLevel>
		<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>
		<CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
		<ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch> <!-- Don't want this -->
	</PropertyGroup>

    <!--Module Version-->
    <PropertyGroup>
        <Version>1.0.0</Version>
        <GameVersion>1.2.12</GameVersion>
    </PropertyGroup>

    <!-- Versions of Major Dependencies (For Package References & SubModule.xml Substitution) -->
    <PropertyGroup>
        <!--BuildResources Version-->
        <BuildResourcesVersion>1.1.0.104</BuildResourcesVersion>
        <!--Harmony Version-->
        <HarmonyVersion>2.3.3</HarmonyVersion>
        <!--Harmony Extensions Version-->
        <HarmonyExtensionsVersion>3.2.0.77</HarmonyExtensionsVersion>
        <!--UIExtenderEx Version-->
        <UIExtenderExVersion>2.12.0</UIExtenderExVersion>
    </PropertyGroup>
    
    <PropertyGroup>
        <ModuleId>SeparatistCrisis</ModuleId>
        <ModuleName>$(ModuleId)</ModuleName>
        <RootNamespace>$(ModuleId)</RootNamespace>
    </PropertyGroup>

    <PropertyGroup>
        <Authors>Separatist Crisis Team</Authors>
        <Product>Separatist Crisis mod for Bannerlord</Product>
        <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
        <Copyright>Copyright Â© 2020-2025 Separatist Crisis Team</Copyright>
        <Description>Unofficial Star Wars total overhaul mod for Mount &amp; Blade II: Bannerlord</Description>
    </PropertyGroup>

    <PropertyGroup>
        <IsMinimal>true</IsMinimal>
        <IsMinimal Condition="$(Configuration.Contains('Minimal'))">true</IsMinimal>
        <IsStable>false</IsStable>
        <IsStable Condition="$(Configuration.Contains('Stable'))">true</IsStable>
        <IsBeta>false</IsBeta>
        <IsBeta Condition="$(Configuration.Contains('Beta'))">true</IsBeta>
    </PropertyGroup>

    <PropertyGroup>
        <SGVFile>$([System.IO.File]::ReadAllText($(MSBuildThisFileDirectory)/../supported-game-versions.txt))</SGVFile>
    </PropertyGroup>
    <ItemGroup>
        <SGVItem Include="$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`))" />
    </ItemGroup>

    <PropertyGroup Condition="$(OverrideGameVersion) == ''">
        <!-- Parsing  supported-game-versions.txt -->
        <SGVLineCount>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`).Length)</SGVLineCount>
        <SGVLastEntryIndex>$([MSBuild]::Subtract($(SGVLineCount), 1))</SGVLastEntryIndex>
        <!-- First entry is Beta, second Stable, last Minimal -->
        <FirstLine  Condition="'$(SGVLineCount)' &gt; 0">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[0])</FirstLine>
        <SecondLine Condition="'$(SGVLineCount)' &gt; 1">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[1])</SecondLine>
        <LastLine   Condition="'$(SGVLineCount)' &gt; 0">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[$(SGVLastEntryIndex)])</LastLine>
        <!-- -->
        <SecondLine Condition="'$(SecondLine)' == ''">$(FirstLine)</SecondLine>
        <LastLine Condition="'$(LastLine)' == ''">$(SecondLine)</LastLine>
        <!-- -->
        <GameBetaVersion>$(FirstLine)</GameBetaVersion>
        <GameStableVersion>$(SecondLine)</GameStableVersion>
        <GameMinimalVersion>$(LastLine)</GameMinimalVersion>
        <!-- -->
        <GameVersionWithPrefix>v1.0.0</GameVersionWithPrefix>
        <GameVersionWithPrefix Condition="$(IsMinimal)">$(GameMinimalVersion)</GameVersionWithPrefix>
        <GameVersionWithPrefix Condition="$(IsStable)">$(GameStableVersion)</GameVersionWithPrefix>
        <GameVersionWithPrefix Condition="$(IsBeta)">$(GameBetaVersion)</GameVersionWithPrefix>
        <!-- -->
        <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
    </PropertyGroup>

    <PropertyGroup Condition="$(OverrideGameVersion) != ''">
        <GameVersionWithPrefix>$(OverrideGameVersion)</GameVersionWithPrefix>
        <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
    </PropertyGroup>

    <!-- Game Folder(s) -->
    <PropertyGroup>
        <!--Bannerlord's Root Folder. Leave empty if you want it to be tried to be autoresolved.-->
        <GameFolder Condition="$(IsStable)">$(BANNERLORD_STABLE_DIR)</GameFolder>
        <GameFolder Condition="$(IsBeta)">$(BANNERLORD_BETA_DIR)</GameFolder>
        <GameFolder Condition="$(GameFolder) == ''">$(BANNERLORD_GAME_DIR)</GameFolder>
    </PropertyGroup>
</Project>
